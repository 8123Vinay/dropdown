{"ast":null,"code":"var _jsxFileName = \"/Users/Vinaykumar/Desktop/Development/React/hooks/src/Components/Usereducer2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from 'react'; // let x=Math.random();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Usereducer2() {\n  _s();\n\n  // const [count,setCount]=useState({count:1})\n  let [count, dispatch] = useReducer(reducer, 1);\n\n  function reducer(action) {\n    return count + 1;\n  }\n\n  function fun(count) {\n    dispatch();\n    console.log(count);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        fun(count);\n      },\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Usereducer2, \"5f45ETMPWg8SQkEP+i0NEAdUkz8=\");\n\n_c = Usereducer2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Usereducer2\");","map":{"version":3,"sources":["/Users/Vinaykumar/Desktop/Development/React/hooks/src/Components/Usereducer2.js"],"names":["React","useState","useReducer","Usereducer2","count","dispatch","reducer","action","fun","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,UAAvB,QAAwC,OAAxC,C,CACA;;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAClC;AACA,MAAI,CAACC,KAAD,EAAOC,QAAP,IAAiBH,UAAU,CAACI,OAAD,EAAS,CAAT,CAA/B;;AAEA,WAASA,OAAT,CAAiBC,MAAjB,EAAwB;AACpB,WACGH,KAAK,GAAC,CADT;AAGH;;AAED,WAASI,GAAT,CAAaJ,KAAb,EAAmB;AACfC,IAAAA,QAAQ;AACRI,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH;;AAGH,sBACE;AAAA,2BAGE;AAAQ,MAAA,OAAO,EAAE,MAAI;AACjBI,QAAAA,GAAG,CAACJ,KAAD,CAAH;AACH,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA3BuBD,W;;KAAAA,W","sourcesContent":["import React,{useState,useReducer} from 'react'\n// let x=Math.random();\n\nexport default function Usereducer2() {\n    // const [count,setCount]=useState({count:1})\n    let [count,dispatch]=useReducer(reducer,1);\n\n    function reducer(action){\n        return(\n           count+1   \n        )\n    }\n    \n    function fun(count){\n        dispatch()\n        console.log(count)\n    }\n\n   \n  return (\n    <div>\n        {/* <h3>{count}</h3> */}\n        {/* <h3>{y}</h3> */}\n      <button onClick={()=>{\n          fun(count)\n      }}>\n          Click\n      </button>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}