{"ast":null,"code":"var _jsxFileName = \"/Users/Vinaykumar/Desktop/Development/React/hooks/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect, useContext, createContext } from 'react'; // import { colorContext,Colors }from './Components/colorContext.js'\n// import {UseState,UseEffect,UseContext,Context,useReducer, Usereducer,Usereducer2} from './Components/'\n\nimport { useSpring, animated, useTransition } from 'react-spring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mount, setMount] = useState(false);\n  const transition = useTransition(mount, {\n    from: {\n      x: -100,\n      y: -100,\n      opacity: 0\n    },\n    enter: {\n      x: 200,\n      y: 200,\n      opacity: 1\n    },\n    leave: {\n      x: -100,\n      y: -100,\n      opacity: 0\n    }\n  }); // const styles=useSpring({\n  //   // loop:{reverse:true},\n  //   opacity:mount? 1:0,\n  //   marginTop:mount ? 300 :-300,\n  //   marginLeft:mount ? 300 :-300\n  // })\n  // const style2=useTransition()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setMount(!mount);\n      },\n      children: \"ClickHere\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 6\n    }, this), transition((style, item) => item ? /*#__PURE__*/_jsxDEV(animated.div, {\n      style: style,\n      children: \"Hello animation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this) : \" \")]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RVdLpzBYacUOn7g0rZoUMpncMtA=\", false, function () {\n  return [useTransition];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Vinaykumar/Desktop/Development/React/hooks/src/App.js"],"names":["React","useState","useEffect","useContext","createContext","useSpring","animated","useTransition","App","mount","setMount","transition","from","x","y","opacity","enter","leave","style","item"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,UAAjC,EAA4CC,aAA5C,QAAgE,OAAhE,C,CACA;AACA;;AAEA,SAAQC,SAAR,EAAkBC,QAAlB,EAA2BC,aAA3B,QAA+C,cAA/C;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMU,UAAU,GAACJ,aAAa,CAACE,KAAD,EAAO;AACjCG,IAAAA,IAAI,EAAC;AAACC,MAAAA,CAAC,EAAC,CAAC,GAAJ;AAASC,MAAAA,CAAC,EAAC,CAAC,GAAZ;AAAiBC,MAAAA,OAAO,EAAC;AAAzB,KAD4B;AAEjCC,IAAAA,KAAK,EAAC;AAACH,MAAAA,CAAC,EAAC,GAAH;AAAQC,MAAAA,CAAC,EAAC,GAAV;AAAeC,MAAAA,OAAO,EAAC;AAAvB,KAF2B;AAGjCE,IAAAA,KAAK,EAAC;AAACJ,MAAAA,CAAC,EAAC,CAAC,GAAJ;AAAQC,MAAAA,CAAC,EAAC,CAAC,GAAX;AAAgBC,MAAAA,OAAO,EAAC;AAAxB;AAH2B,GAAP,CAA9B,CAFe,CAQf;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEE,sBACE;AAAA,4BACC;AAAQ,MAAA,OAAO,EAAE,MAAI;AACpBL,QAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,OAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAICE,UAAU,CAAC,CAACO,KAAD,EAAOC,IAAP,KACTA,IAAI,gBAAI,QAAC,QAAD,CAAU,GAAV;AAAc,MAAA,KAAK,EAAED,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ,GAEc,GAHV,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA9BQV,G;UAEQD,a;;;KAFRC,G;AAgCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React,{useState,useEffect,useContext,createContext} from 'react'\n// import { colorContext,Colors }from './Components/colorContext.js'\n// import {UseState,UseEffect,UseContext,Context,useReducer, Usereducer,Usereducer2} from './Components/'\n\nimport {useSpring,animated,useTransition} from 'react-spring'\n\nfunction App() {\nconst [mount, setMount]=useState(false);  \nconst transition=useTransition(mount,{\n    from:{x:-100, y:-100, opacity:0},\n    enter:{x:200, y:200, opacity:1},\n    leave:{x:-100,y:-100, opacity:0},\n    \n})\n// const styles=useSpring({\n//   // loop:{reverse:true},\n//   opacity:mount? 1:0,\n//   marginTop:mount ? 300 :-300,\n//   marginLeft:mount ? 300 :-300\n// })\n\n// const style2=useTransition()\n\n  return (\n    <div>\n     <button onClick={()=>{\n      setMount(!mount)\n    }}>ClickHere</button>\n    {transition((style,item)=>\n       item ? (<animated.div style={style}>\n       Hello animation\n       </animated.div>) :\" \"\n  )}\n    \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}