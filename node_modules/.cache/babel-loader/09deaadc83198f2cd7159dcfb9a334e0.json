{"ast":null,"code":"var _jsxFileName = \"/Users/Vinaykumar/Desktop/Development/React/hooks/src/Components/Usereducer2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from 'react';\nimport { setState } from 'jest-circus'; // let x=Math.random();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Usereducer2() {\n  _s();\n\n  // const [count,setCount]=useState({count:1})\n  // const [count,dispatch]=useReducer(reducer,1);\n  const [error, setError] = useState(\"\");\n  const [toggle, setToggle] = useState(true); // function reducer(action){\n  //     console.log(count)\n  //     return(\n  //        count+1   \n  //     )\n  // }\n\n  function fun(count) {// dispatch()\n    // console.log(count)\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (toggle) {\n          setError(\"Hello this is error message\");\n        } else {\n          setState(\"\");\n        }\n\n        setToggle(!toggle);\n      },\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Usereducer2, \"iJ7uChYnQ/5o0lE7V80D2hgmwcY=\");\n\n_c = Usereducer2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Usereducer2\");","map":{"version":3,"sources":["/Users/Vinaykumar/Desktop/Development/React/hooks/src/Components/Usereducer2.js"],"names":["React","useState","useReducer","setState","Usereducer2","error","setError","toggle","setToggle","fun","count"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,UAAvB,QAAwC,OAAxC;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAClC;AACA;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBL,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACM,MAAD,EAAQC,SAAR,IAAmBP,QAAQ,CAAC,IAAD,CAAjC,CAJkC,CAMlC;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASQ,GAAT,CAAaC,KAAb,EAAmB,CACf;AACA;AACH;;AAGH,sBACE;AAAA,4BAGI;AAAA,gBAAIL;AAAJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAI;AAEjB,YAAGE,MAAH,EAAU;AACRD,UAAAA,QAAQ,CAAC,6BAAD,CAAR;AACD,SAFD,MAGI;AACAH,UAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;;AACDK,QAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AAGH,OAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAxCuBH,W;;KAAAA,W","sourcesContent":["import React,{useState,useReducer} from 'react'\nimport { setState } from 'jest-circus';\n// let x=Math.random();\n\nexport default function Usereducer2() {\n    // const [count,setCount]=useState({count:1})\n    // const [count,dispatch]=useReducer(reducer,1);\n    const [error,setError]=useState(\"\");\n    const [toggle,setToggle]=useState(true)\n\n    // function reducer(action){\n    //     console.log(count)\n    //     return(\n    //        count+1   \n    //     )\n    // }\n    \n    function fun(count){\n        // dispatch()\n        // console.log(count)\n    }\n\n   \n  return (\n    <div>\n        {/* <h3>{count}</h3> */}\n        {/* <h3>{y}</h3> */}\n        <p>{error}</p>\n      <button onClick={()=>{\n          \n          if(toggle){\n            setError(\"Hello this is error message\")\n          }\n          else{\n              setState(\"\")\n          }\n          setToggle(!toggle)\n\n          \n      }}>\n          Click\n      </button>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}